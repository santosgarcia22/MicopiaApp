// Generated by view binder compiler. Do not edit!
package com.example.airsec.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.airsec.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.MaterialAutoCompleteTextView;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFlightBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton btnBloquear;

  @NonNull
  public final MaterialButton btnBorrarDemora;

  @NonNull
  public final MaterialButton btnCerrarVuelo;

  @NonNull
  public final MaterialButton btnGuardarDemora;

  @NonNull
  public final MaterialButton btnGuardarVuelo;

  @NonNull
  public final MaterialButton btnIrListado;

  @NonNull
  public final MaterialButton btnIrPersonas;

  @NonNull
  public final MaterialButton btnIrTiempos;

  @NonNull
  public final MaterialCardView cardDemoraResumen;

  @NonNull
  public final LinearLayout content;

  @NonNull
  public final MaterialAutoCompleteTextView dropCoordinador;

  @NonNull
  public final MaterialAutoCompleteTextView dropOperador;

  @NonNull
  public final TextInputEditText etDemoraMinutos;

  @NonNull
  public final TextInputEditText etDemoraMotivo;

  @NonNull
  public final TextInputEditText etDestino;

  @NonNull
  public final TextInputEditText etFecha;

  @NonNull
  public final TextInputEditText etHoraLlegada;

  @NonNull
  public final TextInputEditText etHoraPushback;

  @NonNull
  public final TextInputEditText etHoraSalidaItinerario;

  @NonNull
  public final TextInputEditText etMatricula;

  @NonNull
  public final TextInputEditText etNumeroVueloLlegando;

  @NonNull
  public final TextInputEditText etNumeroVueloSaliendo;

  @NonNull
  public final TextInputEditText etOrigenNumero;

  @NonNull
  public final TextInputEditText etPosicion;

  @NonNull
  public final TextInputEditText etTotalPax;

  @NonNull
  public final NestedScrollView scrollContent;

  @NonNull
  public final MaterialToolbar toolbarFlight;

  @NonNull
  public final TextView tvDemoraResumen;

  private ActivityFlightBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton btnBloquear, @NonNull MaterialButton btnBorrarDemora,
      @NonNull MaterialButton btnCerrarVuelo, @NonNull MaterialButton btnGuardarDemora,
      @NonNull MaterialButton btnGuardarVuelo, @NonNull MaterialButton btnIrListado,
      @NonNull MaterialButton btnIrPersonas, @NonNull MaterialButton btnIrTiempos,
      @NonNull MaterialCardView cardDemoraResumen, @NonNull LinearLayout content,
      @NonNull MaterialAutoCompleteTextView dropCoordinador,
      @NonNull MaterialAutoCompleteTextView dropOperador,
      @NonNull TextInputEditText etDemoraMinutos, @NonNull TextInputEditText etDemoraMotivo,
      @NonNull TextInputEditText etDestino, @NonNull TextInputEditText etFecha,
      @NonNull TextInputEditText etHoraLlegada, @NonNull TextInputEditText etHoraPushback,
      @NonNull TextInputEditText etHoraSalidaItinerario, @NonNull TextInputEditText etMatricula,
      @NonNull TextInputEditText etNumeroVueloLlegando,
      @NonNull TextInputEditText etNumeroVueloSaliendo, @NonNull TextInputEditText etOrigenNumero,
      @NonNull TextInputEditText etPosicion, @NonNull TextInputEditText etTotalPax,
      @NonNull NestedScrollView scrollContent, @NonNull MaterialToolbar toolbarFlight,
      @NonNull TextView tvDemoraResumen) {
    this.rootView = rootView;
    this.btnBloquear = btnBloquear;
    this.btnBorrarDemora = btnBorrarDemora;
    this.btnCerrarVuelo = btnCerrarVuelo;
    this.btnGuardarDemora = btnGuardarDemora;
    this.btnGuardarVuelo = btnGuardarVuelo;
    this.btnIrListado = btnIrListado;
    this.btnIrPersonas = btnIrPersonas;
    this.btnIrTiempos = btnIrTiempos;
    this.cardDemoraResumen = cardDemoraResumen;
    this.content = content;
    this.dropCoordinador = dropCoordinador;
    this.dropOperador = dropOperador;
    this.etDemoraMinutos = etDemoraMinutos;
    this.etDemoraMotivo = etDemoraMotivo;
    this.etDestino = etDestino;
    this.etFecha = etFecha;
    this.etHoraLlegada = etHoraLlegada;
    this.etHoraPushback = etHoraPushback;
    this.etHoraSalidaItinerario = etHoraSalidaItinerario;
    this.etMatricula = etMatricula;
    this.etNumeroVueloLlegando = etNumeroVueloLlegando;
    this.etNumeroVueloSaliendo = etNumeroVueloSaliendo;
    this.etOrigenNumero = etOrigenNumero;
    this.etPosicion = etPosicion;
    this.etTotalPax = etTotalPax;
    this.scrollContent = scrollContent;
    this.toolbarFlight = toolbarFlight;
    this.tvDemoraResumen = tvDemoraResumen;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFlightBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFlightBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_flight, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFlightBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBloquear;
      MaterialButton btnBloquear = ViewBindings.findChildViewById(rootView, id);
      if (btnBloquear == null) {
        break missingId;
      }

      id = R.id.btnBorrarDemora;
      MaterialButton btnBorrarDemora = ViewBindings.findChildViewById(rootView, id);
      if (btnBorrarDemora == null) {
        break missingId;
      }

      id = R.id.btnCerrarVuelo;
      MaterialButton btnCerrarVuelo = ViewBindings.findChildViewById(rootView, id);
      if (btnCerrarVuelo == null) {
        break missingId;
      }

      id = R.id.btnGuardarDemora;
      MaterialButton btnGuardarDemora = ViewBindings.findChildViewById(rootView, id);
      if (btnGuardarDemora == null) {
        break missingId;
      }

      id = R.id.btnGuardarVuelo;
      MaterialButton btnGuardarVuelo = ViewBindings.findChildViewById(rootView, id);
      if (btnGuardarVuelo == null) {
        break missingId;
      }

      id = R.id.btnIrListado;
      MaterialButton btnIrListado = ViewBindings.findChildViewById(rootView, id);
      if (btnIrListado == null) {
        break missingId;
      }

      id = R.id.btnIrPersonas;
      MaterialButton btnIrPersonas = ViewBindings.findChildViewById(rootView, id);
      if (btnIrPersonas == null) {
        break missingId;
      }

      id = R.id.btnIrTiempos;
      MaterialButton btnIrTiempos = ViewBindings.findChildViewById(rootView, id);
      if (btnIrTiempos == null) {
        break missingId;
      }

      id = R.id.cardDemoraResumen;
      MaterialCardView cardDemoraResumen = ViewBindings.findChildViewById(rootView, id);
      if (cardDemoraResumen == null) {
        break missingId;
      }

      id = R.id.content;
      LinearLayout content = ViewBindings.findChildViewById(rootView, id);
      if (content == null) {
        break missingId;
      }

      id = R.id.dropCoordinador;
      MaterialAutoCompleteTextView dropCoordinador = ViewBindings.findChildViewById(rootView, id);
      if (dropCoordinador == null) {
        break missingId;
      }

      id = R.id.dropOperador;
      MaterialAutoCompleteTextView dropOperador = ViewBindings.findChildViewById(rootView, id);
      if (dropOperador == null) {
        break missingId;
      }

      id = R.id.etDemoraMinutos;
      TextInputEditText etDemoraMinutos = ViewBindings.findChildViewById(rootView, id);
      if (etDemoraMinutos == null) {
        break missingId;
      }

      id = R.id.etDemoraMotivo;
      TextInputEditText etDemoraMotivo = ViewBindings.findChildViewById(rootView, id);
      if (etDemoraMotivo == null) {
        break missingId;
      }

      id = R.id.etDestino;
      TextInputEditText etDestino = ViewBindings.findChildViewById(rootView, id);
      if (etDestino == null) {
        break missingId;
      }

      id = R.id.etFecha;
      TextInputEditText etFecha = ViewBindings.findChildViewById(rootView, id);
      if (etFecha == null) {
        break missingId;
      }

      id = R.id.etHoraLlegada;
      TextInputEditText etHoraLlegada = ViewBindings.findChildViewById(rootView, id);
      if (etHoraLlegada == null) {
        break missingId;
      }

      id = R.id.etHoraPushback;
      TextInputEditText etHoraPushback = ViewBindings.findChildViewById(rootView, id);
      if (etHoraPushback == null) {
        break missingId;
      }

      id = R.id.etHoraSalidaItinerario;
      TextInputEditText etHoraSalidaItinerario = ViewBindings.findChildViewById(rootView, id);
      if (etHoraSalidaItinerario == null) {
        break missingId;
      }

      id = R.id.etMatricula;
      TextInputEditText etMatricula = ViewBindings.findChildViewById(rootView, id);
      if (etMatricula == null) {
        break missingId;
      }

      id = R.id.etNumeroVueloLlegando;
      TextInputEditText etNumeroVueloLlegando = ViewBindings.findChildViewById(rootView, id);
      if (etNumeroVueloLlegando == null) {
        break missingId;
      }

      id = R.id.etNumeroVueloSaliendo;
      TextInputEditText etNumeroVueloSaliendo = ViewBindings.findChildViewById(rootView, id);
      if (etNumeroVueloSaliendo == null) {
        break missingId;
      }

      id = R.id.etOrigenNumero;
      TextInputEditText etOrigenNumero = ViewBindings.findChildViewById(rootView, id);
      if (etOrigenNumero == null) {
        break missingId;
      }

      id = R.id.etPosicion;
      TextInputEditText etPosicion = ViewBindings.findChildViewById(rootView, id);
      if (etPosicion == null) {
        break missingId;
      }

      id = R.id.etTotalPax;
      TextInputEditText etTotalPax = ViewBindings.findChildViewById(rootView, id);
      if (etTotalPax == null) {
        break missingId;
      }

      id = R.id.scrollContent;
      NestedScrollView scrollContent = ViewBindings.findChildViewById(rootView, id);
      if (scrollContent == null) {
        break missingId;
      }

      id = R.id.toolbarFlight;
      MaterialToolbar toolbarFlight = ViewBindings.findChildViewById(rootView, id);
      if (toolbarFlight == null) {
        break missingId;
      }

      id = R.id.tvDemoraResumen;
      TextView tvDemoraResumen = ViewBindings.findChildViewById(rootView, id);
      if (tvDemoraResumen == null) {
        break missingId;
      }

      return new ActivityFlightBinding((CoordinatorLayout) rootView, btnBloquear, btnBorrarDemora,
          btnCerrarVuelo, btnGuardarDemora, btnGuardarVuelo, btnIrListado, btnIrPersonas,
          btnIrTiempos, cardDemoraResumen, content, dropCoordinador, dropOperador, etDemoraMinutos,
          etDemoraMotivo, etDestino, etFecha, etHoraLlegada, etHoraPushback, etHoraSalidaItinerario,
          etMatricula, etNumeroVueloLlegando, etNumeroVueloSaliendo, etOrigenNumero, etPosicion,
          etTotalPax, scrollContent, toolbarFlight, tvDemoraResumen);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
