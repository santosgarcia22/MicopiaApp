// Generated by view binder compiler. Do not edit!
package com.example.airsec.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.airsec.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPersonBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton btnEntrada;

  @NonNull
  public final MaterialButton btnSalida;

  @NonNull
  public final TextView tvDetalle;

  @NonNull
  public final TextView tvIdDoc;

  @NonNull
  public final TextView tvNombre;

  private ItemPersonBinding(@NonNull MaterialCardView rootView, @NonNull MaterialButton btnEntrada,
      @NonNull MaterialButton btnSalida, @NonNull TextView tvDetalle, @NonNull TextView tvIdDoc,
      @NonNull TextView tvNombre) {
    this.rootView = rootView;
    this.btnEntrada = btnEntrada;
    this.btnSalida = btnSalida;
    this.tvDetalle = tvDetalle;
    this.tvIdDoc = tvIdDoc;
    this.tvNombre = tvNombre;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPersonBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPersonBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_person, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPersonBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnEntrada;
      MaterialButton btnEntrada = ViewBindings.findChildViewById(rootView, id);
      if (btnEntrada == null) {
        break missingId;
      }

      id = R.id.btnSalida;
      MaterialButton btnSalida = ViewBindings.findChildViewById(rootView, id);
      if (btnSalida == null) {
        break missingId;
      }

      id = R.id.tvDetalle;
      TextView tvDetalle = ViewBindings.findChildViewById(rootView, id);
      if (tvDetalle == null) {
        break missingId;
      }

      id = R.id.tvIdDoc;
      TextView tvIdDoc = ViewBindings.findChildViewById(rootView, id);
      if (tvIdDoc == null) {
        break missingId;
      }

      id = R.id.tvNombre;
      TextView tvNombre = ViewBindings.findChildViewById(rootView, id);
      if (tvNombre == null) {
        break missingId;
      }

      return new ItemPersonBinding((MaterialCardView) rootView, btnEntrada, btnSalida, tvDetalle,
          tvIdDoc, tvNombre);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
